# Example config for pulls action.

# TODO: NO NEED FOR ANY DEFAULTS (true for any feature) here.
# No need for false as well (just don't mention it)
# One TODO is below.

# Mentioning the features you wish to use is mandatory.
# Write `true` in front of the feature to use default config.
# Not mentioning a feature or putting a `false` in front of
# that feature would mean you don't want to use that feature.

# While modifying the config of each feature, only mention the
# properties you wish to change, skip to use default.

# Track and notify the contributor whenever a merge conflicts
# arise.
# @types:
#   true: Use with default config;
#   false: Don't use this feature;
#   Provide config to use;
merge_conflicts:
  # Label to put on PRs with merge conflicts.
  # @types:
  #   false or '': Don't add label;
  #   string: Name of label to add;
  # @default: false
  label: "has conflicts"

  # Whether to comment on the PR or not to notify the author
  # about the merge conflict.
  # @types:
  #   true: Post a comment (template name: mergeConflictWarning)
  #   false: Don't post a comment;
  # @default: true
  comment: true

# Add a size label on a PR depending upon the number of lines
# changed in that PR. Helps maintainers to get a hint of how
# long reviewing the PR might take.
# @types:
#   true: Use with default config;
#   false: Don't use this feature;
#   Provide config to use;
size_labels:
  # List of labels and the minimum amount of (non-negative)
  # line changes required for that label to be added. Should be
  # listed in ascending order of the number of line changes
  # below.
  # TODO: CHANGE THE LINE CHANGES TO MAXIMUM (but will require
  # of Infinity, so minimum may be better).
  # @default: {}
  labels:
    "size: XS": 0
    "size: S": 5
    "size: M": 25
    "size: L": 50
    "size: XL": 100

  # File paths to be excluded from the size count.
  # * `.js` excludes all files with the `.js` extension.
  # * `tests/` excludes all files in the `./frontend-tests/`,
  #   `./zerver-tests/` folders (`tests/` matching).
  # * `index.js` excludes any files named `index.js`.
  # @default: []
  exclude: ["frontend_tests/", "zerver/tests/"]

# Import the labels from the issue whenever a PR is linked
# to an issue, either by using keywords in issue description
# or manually.
# Linking a PR to an issue:
# https://help.github.com/articles/closing-issues-using-keywords/
# @types:
#   true: Use with default config;
#   false: Don't use this feature;
#   Provide config to use;
import_linked_issue_labels:
  # Labels to include/exclude from being added to linked PRs.
  # Either mention the `include` key or `exclude` key, don't
  # mention both.
  # @default: all issue labels will be added to linked PRs.
  exclude:
    - "in progress"
    - "good first issue"
    - "good sprint project"
    - "help wanted"

# Whether or not a contributor should mention the issue linked
# to a PR in the commit message of the commit in that PR which
# finally resolves the issue (no need to mention in every
# commit of the PR but only in the final commit which resolves
# the issue).
# The issue should be mentioned in the commit message using the
# issue linking keywords, so that the issue gets automatcally
# closed after that commit is merged.
# Keywords that can be used:
# https://help.github.com/articles/closing-issues-using-keywords/
# @types:
#   true: Use with default config;
#   false: Don't use this feature;
#   Provide config to use;
reference_required_in_commits:
  # Whether or not to skip the issue reference requirement in
  # commits for "work in progress" PRs.
  # @types:
  #   true: Skip for PRs with default WIP title beginning;
  #   false: Don't skip for WIP PRs;
  #   Provide title_beginning to use;
  skip_for_wip:
    # String with which the PR title should begin to mark a PR
    # as a "work in progress" PR.
    # @default: "[WIP]"
    # title_beginning: "[WIP]"
    wip_identifier_in_title: "[WIP]"
